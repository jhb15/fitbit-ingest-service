{
	"swagger": "2.0",
	"info": {
		"description": "API for commmunicating with the FitBit Ingest Service.",
		"version": "1.0.0",
		"title": "Fitbit Ingest Service",
		"contact": {
			"email": "TBC@aber.ac.uk"
		}
	},
	"host": "TBC",
	"tags": [
		{
			"name": "Monitoring / Status",
			"description": "Used to check the health of the system."
		}
	],
	"schemes": ["https", "http"],
	"paths": {
		"/api/Status": {
			"get": {
				"tags": ["Monitoring / Status"],
				"summary": "Returns the heath of the system.",
				"description": "This will be consumed by GLaDOS",
				"operationId": "getStatus",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/LoginPage": {
			"post": {
				"tags": ["API Endpoint for Fitbit"],
				"summary": "This is required by the Fitbit API.",
				"description": "This endpoint will recieve the code given by the the fitbit API",
				"operationId": "postKey",
				"parameters": [
					{
						"name": "code",
						"in": "query",
						"description": "The autherisation string",
						"required": false,
						"type": "string"
					}
				],
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"responses": {
					"200": {
						"description": "Returns page letting user know if code was valid and they are successfully connected."
					}
				}
			}
		},
		"/api/Prompt": {
			"get": {
				"tags": ["Manual Request prompt"],
				"summary": "This can be used to manually trigger a request to the Fitbit API for a specific user.",
				"description": "With a given user ID the request will prompt Fitbit and return the data",
				"operationId": "getPrompt",
				"parameters": [
					{
						"name": "userId",
						"in": "query",
						"description": "The user id of the user of which to check against",
						"required": true,
						"type": "string"
					}
				],
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"responses": {
					"200": {
						"description": "The FitBit data for the specified user."
					},
					"400": {
						"description": "Missing Parameters or Authorization Header"
					},
					"401": {
						"description": "Invalid Access Token!"
					},
					"403": {
						"description": "No Fitbit Access Given"
					}
				}
			}
		},
		"/api/Check": {
			"get": {
				"tags": ["Check if connected"],
				"summary": "Used to check if a user is connected with Fitbit.",
				"description": "With a given users ID it will check if they have been authenticated with FitBit",
				"operationId": "checkUser",
				"parameters": [
					{
						"name": "userId",
						"in": "query",
						"description": "The user id of the user of which to check against",
						"required": true,
						"type": "string"
					}
				],
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"responses": {
					"200": {
						"description": "User has Authorised fitbit usage"
					},
					"204": {
						"description": "User has not Authorised fitbit usage"
					},
					"400": {
						"description": "Missing Parameters or Authorization Header"
					},
					"401": {
						"description": "Invalid Access Token!"
					}
				}
			}
		}
	}
}
